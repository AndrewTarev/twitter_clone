"""create tables

Revision ID: 6cfe69c5198a
Revises: 
Create Date: 2024-08-18 22:30:37.599111

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6cfe69c5198a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
    )
    op.create_table(
        "security_key",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_security_key_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_security_key")),
    )
    op.create_index(op.f("ix_security_key_key"), "security_key", ["key"], unique=True)
    op.create_table(
        "tweets",
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.String(length=3000), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"], ["users.id"], name=op.f("fk_tweets_author_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tweets")),
    )
    op.create_table(
        "user_following",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("follower_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["follower_id"],
            ["users.id"],
            name=op.f("fk_user_following_follower_id_users"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_following_user_id_users"),
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "follower_id", name=op.f("pk_user_following")
        ),
    )
    op.create_table(
        "likes",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("tweet_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tweet_id"], ["tweets.id"], name=op.f("fk_likes_tweet_id_tweets")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_likes_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_likes")),
    )
    op.create_table(
        "medias",
        sa.Column("tweet_id", sa.Integer(), nullable=True),
        sa.Column("file_name", sa.String(), nullable=False),
        sa.Column("link", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tweet_id"], ["tweets.id"], name=op.f("fk_medias_tweet_id_tweets")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_medias")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("medias")
    op.drop_table("likes")
    op.drop_table("user_following")
    op.drop_table("tweets")
    op.drop_index(op.f("ix_security_key_key"), table_name="security_key")
    op.drop_table("security_key")
    op.drop_table("users")
    # ### end Alembic commands ###
