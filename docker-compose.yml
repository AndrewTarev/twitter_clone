services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data
    networks:
      - my_network


  backend:
    build:
      dockerfile: backend/Dockerfile
    stop_signal: SIGKILL
    env_file:
      - .env
    container_name: twitter_clone
    volumes:
      - ./frontend/static/:/app/frontend/static/
    ports:
      - "8000:8000"
    command: ["/app/docker-entrypoint.sh"]
    depends_on:
      - db
    networks:
      - my_network


  frontend:
    build:
      dockerfile: frontend/Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: always
    networks:
      - my_network


volumes:
    postgres-data:


networks:
  my_network:
    driver: bridge